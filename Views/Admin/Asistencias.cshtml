@{
    Layout = "_LayoutAdmin";
}
@using System.Data
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Asistencias de Empleados</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h2 class="mb-4">Asistencias de Empleados</h2>

        <!-- Filtros -->
        <div class="row mb-3">
            <div class="col-md-3">
                <label for="filterSite" class="form-label">Filtrar por Site:</label>
                <select id="filterSite" class="form-select">
                    <option value="">Todos</option>
                    @foreach (DataRow site in (ViewBag.Sites as DataTable)?.Rows.Cast<DataRow>() ?? Enumerable.Empty<DataRow>())
                    {
                        <option value="@site[1]">@site[1]</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label for="filterEncargado" class="form-label">Filtrar por Encargado:</label>
                <select id="filterEncargado" class="form-select">
                    <option value="">Todos</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="startDate" class="form-label">Fecha Inicio:</label>
                <input type="date" id="startDate" class="form-control">
            </div>
            <div class="col-md-3">
                <label for="endDate" class="form-label">Fecha Fin:</label>
                <input type="date" id="endDate" class="form-control">
            </div>

            <div class="col-md-12 text-end mt-2">
                <button id="resetFilters" class="btn btn-secondary">Restablecer Filtros</button>
            </div>

        </div>

        <!-- Tabla -->
        <table id="tablaAsistencias" class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nombre</th>
                    <th>Site</th>
                    <th>Encargado</th>
                    <th>Fecha</th>
                    <th>Hora de Entrada</th>
                    <th>Hora de Salida</th>
                    <th>Estado</th>
                </tr>
            </thead>
            <tbody>
                @if (ViewBag.Asistencias is DataTable)
                {
                    var asistencias = (ViewBag.Asistencias as DataTable)?.Rows.Cast<DataRow>()
                        .GroupBy(a => new { EmpleadoID = a[1].ToString(), Fecha = Convert.ToDateTime(a[4]).Date })
                        .Select(grupo => new
                        {
                            EmpleadoID = grupo.Key.EmpleadoID,
                            Fecha = grupo.Key.Fecha,
                            Entrada = grupo.Min(a => Convert.ToDateTime(a[4])), // La primera hora de entrada
                            Salida = grupo.Max(a => Convert.ToDateTime(a[4]))  // La última hora de salida
                        });

                    var empleados = (ViewBag.Empleados as DataTable)?.Rows.Cast<DataRow>();
                    var sitios = (ViewBag.Sites as DataTable)?.Rows.Cast<DataRow>();
                    var encargados = (ViewBag.Empleados as DataTable)?.Rows.Cast<DataRow>();

                    foreach (var asistencia in asistencias)
                    {
                        var empleado = empleados?.FirstOrDefault(e => e[0].ToString() == asistencia.EmpleadoID);
                        var sitio = sitios?.FirstOrDefault(s => s[0].ToString() == empleado?[5].ToString());
                        var encargado = encargados?.FirstOrDefault(enc => enc[0].ToString() == empleado?[7].ToString());
                        var entrada = TimeSpan.Parse(sitio[5].ToString());

                        <tr>
                            <td>@asistencia.EmpleadoID</td>
                            <td>@(empleado != null ? $"{empleado[1]} {empleado[2]} {empleado[3]}" : "Desconocido")</td>
                            <td>@(sitio != null ? sitio[1].ToString() : "N/A")</td>
                            <td>@(encargado != null ? encargado[1].ToString() : "N/A")</td>
                            <td>@asistencia.Fecha.ToString("yyyy-MM-dd")</td>
                            <td>@asistencia.Entrada.ToString("HH:mm")</td>
                            <td>@asistencia.Salida.ToString("HH:mm")</td>
                            <td>@(asistencia.Salida.TimeOfDay > entrada ? "Retardo" : "Entro normal")</td>
                        </tr>
                    }
                }
            </tbody>
        </table>


        <form asp-controller="Admin" asp-action="ExportarExcel" method="post">
            <div class="col-md-12 text-end mt-2">
                <button type="submit" asp-controller="Admin" asp-action="ExportarExcel" class="btn btn-success">Exportar a Excel</button>
            </div>
        </form>
    </div>

    @section scripts {
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
        <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
        <script>
            $(document).ready(function () {
                var table = $('#tablaAsistencias').DataTable({
                    "language": {
                        "url": "//cdn.datatables.net/plug-ins/1.11.5/i18n/Spanish.json"
                    },
                    "paging": false
                });

                // Filtrar por Site
                $('#filterSite').on('change', function () {
                    var site = $(this).val();
                    table.columns(2).search(site).draw();
                });

                // Filtrar por Encargado
                $('#filterEncargado').on('change', function () {
                    var encargado = $(this).val();
                    table.columns(3).search(encargado).draw();
                });

                // Filtrar por rango de fechas
                $('#startDate, #endDate').on('change', function () {
                    table.draw();
                });

                // Extender DataTables para filtrar por rango de fechas
                $.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {
                    var min = $('#startDate').val();
                    var max = $('#endDate').val();
                    var date = data[4]; // Columna de la fecha (índice 4)

                    if (min && new Date(date) < new Date(min)) {
                        return false;
                    }
                    if (max && new Date(date) > new Date(max)) {
                        return false;
                    }
                    return true;
                });

                // ✅ Botón para restablecer filtros
                $('#resetFilters').on('click', function () {
                    $('#filterSite').val('');
                    $('#filterEncargado').val('');
                    $('#startDate').val('');
                    $('#endDate').val('');

                    table.columns().search('').draw(); // Limpia todos los filtros en la tabla
                });
            });
        </script>
    }

</body>
</html>
